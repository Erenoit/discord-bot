image: rust:latest

variables:
  DATABASE_URL: "sqlite://discord_bot.db"
  CARGO_HOME: "./cargo_home"

default:
  cache:
    - key: $CI_COMMIT_REF_SLUG
      paths:
        - target
        # https://doc.rust-lang.org/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci
        - cargo_home/.crates.toml
        - cargo_home/.crates2.json
        - cargo_home/bin/
        - cargo_home/registry/index/
        - cargo_home/registry/cache/
        - cargo_home/git/db/


stages:
  - check
  #- build
  #- deploy

before_script:
  - apt update -qy
  #- apt install cmake sqlite3 aria2 -qy
  - apt install cmake aria2 -qy
  - aria2c -d binstall "https://github.com/cargo-bins/cargo-binstall/releases/latest/download//cargo-binstall-x86_64-unknown-linux-gnu.full.tgz"
  - tar -xf binstall/cargo-binstall-x86_64-unknown-linux-gnu.full.tgz -C binstall
  #- ./binstall/cargo-binstall -y sqlx-cli
  # binstall varsion fails to create database
  - cargo install sqlx-cli --no-default-features --features "sqlite"
  - ./cargo_home/bin/sqlx database setup

clean_target:
  stage: .pre
  rules:
    - changes:
      - Cargo.toml
      - Cargo.lock
  script:
    - cargo clean

format:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    #- if: $CI_COMMIT_TAG
  variables:
    RUSTFLAGS: "-Dwarnings"
  script:
    - cargo fmt --check

clippy:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    #- if: $CI_COMMIT_TAG
  variables:
    RUSTFLAGS: "-Dwarnings"
  script:
    - rustup component add clippy
    - cargo clippy --all-targets --all-features

features:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    #- if: $CI_COMMIT_TAG
  variables:
    RUSTFLAGS: "-Dwarnings"
  script:
    - ./binstall/cargo-binstall -y cargo-all-features
    - cargo check-all-features

#build:
#  stage: build
#  rules:
#    - if: $CI_COMMIT_TAG
#  scripts:
#    - cargo build --release
