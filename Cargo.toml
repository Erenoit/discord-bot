[package]
name = "discord-bot"
description = "Discord bot for playing music in VC but can make other things as well"
version = "2.3.0"
edition = "2021"
license-file = "LICENSE"
repository = "https://gitlab.com/Erenoit/discord-bot"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "1.0"
colored = "2.1"
clap = { version = "4.5", features = ["derive"], optional = true }
directories = { version = "5.0", optional = true }
dotenvy = { version = "0.15", optional = true }
poise = "0.6"
rand = "0.8"
reqwest = { version = "0.11", features = ["cookies"] }
serde = "1.0"
serenity = { version = "0.12", default-features = false, features = [
    "builder",
    "client",
    "collector",
    "gateway",
    "rustls_backend",
    "model",
    "parking_lot",
    "simd_json",
] }
songbird = { version = "0.4", features = ["simd-json"], optional = true }
sonic-rs = "0.3"
sqlx = { version = "0.8", features = [
    "macros",
    "migrate",
    "runtime-tokio-rustls",
    "sqlite",
], optional = true }
symphonia = { version = "0.5", features = [
    "all-codecs",
    "all-formats",
], optional = true }
taplo = { version = "0.13", optional = true }
tokio = { version = "1.39", features = [
    "macros",
    "rt-multi-thread",
    "parking_lot",
] }

[build-dependencies]
clap = { version = "4.5", features = ["derive"], optional = true }
clap_complete = { version = "4.5", optional = true }

[profile.release]
opt-level = 3
codegen-units = 1
lto = "fat"
panic = "abort"
overflow-checks = false
strip = "symbols"

[features]
default = [
    "cmd",
    "config_file",
    "database",
    "dotenv",
    "music",
    "spotify",
    "yt-dlp-fallback",
]
cmd = ["dep:clap", "dep:clap_complete"]
config_file = ["dep:directories", "dep:taplo"]
database = ["dep:directories", "dep:sqlx", "music"]
dotenv = ["dep:dotenvy"]
music = ["dep:songbird", "serenity/voice", "dep:symphonia"]
spotify = ["music"]
yt-dlp-fallback = ["music"]


# Clippy Lints Last Checked For 0.1.78
[lints.clippy]
cargo = { level = "warn", priority = -1 }
cargo_common_metadata = "allow"
multiple_crate_versions = "allow"

correctness = { level = "warn", priority = -1 }
perf = { level = "forbid", priority = -1 }
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }

pedantic = { level = "warn", priority = -1 }
module_name_repetitions = "allow"
cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_precision_loss = "allow"
cast_sign_loss = "allow"
cast_lossless = "allow"
float_cmp = "allow"
too_many_lines = "allow"
uninlined_format_args = "allow"
struct_excessive_bools = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
many_single_char_names = "allow"
unreadable_literal = "allow"

restriction = { level = "allow", priority = -1 }
allow_attributes = "warn"
allow_attributes_without_reason = "forbid"
as_underscore = "forbid"
clone_on_ref_ptr = "forbid"
create_dir = "warn"
dbg_macro = "forbid"
dissallowed_script_idents = "forbid"
empty_drop = "forbid"
empty_enum_variants_with_brackets = "forbid"
error_impl_error = "forbid"
exit = "deny"
filetype_is_file = "warn"
fn_to_numeric_cast_any = "deny"
format_push_string = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"
#infinite_loop = "warn"
large_include_file = "warn"
let_underscore_must_use = "warn"
lossy_float_literal = "warn"
mem_forget = "warn"
missing_assert_message = "warn"
#missing_asserts_fpr_indexing = "warn"
multiple_unsafe_ops_per_block = "forbid"
mutex_atomic = "forbid"
needless_raw_strings = "warn"
panic = "deny"
panic_in_result_fn = "forbid"
pattern_type_mismatch = "warn"
pub_without_shorthand = "forbid"
rc_buffer = "warn"
rc_mutex = "forbid"
redundant_type_annotations = "warn"
renamed_function_parans = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
self_named_module_files = "forbid"
#single_call_fn = "warn"
str_to_string = "forbid"
string_add = "forbid"
string_lit_chars_any = "warn"
string_to_string = "forbid"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "forbid"
todo = "forbid"
try_err = "forbid"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
unwrap_used = "forbid"
verbose_file_reads = "warn"

[lints.rustdoc]
private_intra_doc_links = "allow"
