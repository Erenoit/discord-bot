[package]
name = "discord-bot"
description = "Discord bot for playing music in VC but can make other things as well"
version = "2.3.0"
edition = "2021"
license-file = "LICENSE"
repository = "https://gitlab.com/Erenoit/discord-bot"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "1.0"
colored = "2.1"
clap = { version = "4.5", features = ["derive"], optional = true }
directories = { version = "5.0", optional = true }
dotenvy = { version = "0.15", optional = true }
reqwest = { version = "0.11", features = ["json"] }
json = "0.12"
poise = "0.6"
rand = "0.8"
serde = { version = "1.0", optional = true }
serenity = { version = "0.12", default-features = false, features = [
    "builder",
    "client",
    "collector",
    "gateway",
    "rustls_backend",
    "model",
    "voice",
] }
songbird = { version = "0.4", optional = true }
sqlx = { version = "0.7", features = [
    "macros",
    "migrate",
    "runtime-tokio-rustls",
    "sqlite",
], optional = true }
symphonia = { version = "0.5", features = ["all-codecs", "all-formats"] }
taplo = { version = "0.13", optional = true }
tokio = { version = "1.38", features = [
    "macros",
    "rt-multi-thread",
    "parking_lot",
] }

[build-dependencies]
clap = { version = "4.5", features = ["derive"], optional = true }
clap_complete = { version = "4.5", optional = true }

[build]
rustflags = ["-C", "target-cpu=native"]

[profile.release]
opt-level = 3
codegen-units = 1
lto = "fat"
panic = "abort"
overflow-checks = false
strip = "symbols"

[features]
default = ["cmd", "config_file", "database", "dotenv", "music", "spotify"]
cmd = ["dep:clap", "dep:clap_complete"]
config_file = ["dep:directories", "dep:taplo"]
database = ["dep:directories", "dep:sqlx", "music"]
dotenv = ["dep:dotenvy"]
music = ["dep:songbird"]
spotify = ["dep:serde", "music"]

# Clippy lints (last check 1.70.0)
# The ones commented with forbit are waiting for clippy to ignore external crate
# macros when checking for them
[lints.clippy]
cargo = { level = "warn", priority = -1 }
cargo_common_metadata = "allow"                  # Not going tp release on crates.io
complexity = { level = "warn", priority = -1 }
correctness = { level = "deny", priority = -1 }
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
unreadable_literal = "allow"                     # Only used for colors
perf = { level = "warn", priority = -1 }
restriction = { level = "allow", priority = -1 } # Enabling everything is not recomanded
allow_attributes_without_reason = "warn"         # Not stable yet # force
allow_attributes = "warn"                        # Not stable yet # force
as_underscore = "warn"                           # forbid
clone_on_ref_ptr = "warn"
deref_by_slicing = "warn"
dbg_macro = "warn"                               # forbid
disallowed_script_idents = "warn"
empty_drop = "warn"                              # forbid
empty_structs_with_brackets = "warn"
exhaustive_structs = "warn"
exit = "warn"
#expect_used = "warn"
format_push_string = "warn"
fn_to_numeric_cast_any = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"    # forbid
large_include_file = "warn"
large_stack_arrays = "warn"
let_underscore_must_use = "warn"
lossy_float_literal = "warn"
map_err_ignore = "warn"          # forbid
#min_ident_chars = "warn"                 # forbid
missing_docs_in_private_items = "warn"
mixed_read_write_in_expression = "warn"
multiple_inherent_impl = "warn"
mutex_atomic = "warn"
pub_without_shorthand = "warn"           # forbid
rc_mutex = "warn"                        # forbid
redundant_type_annotations = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
self_named_module_files = "warn"
str_to_string = "warn"                   # forbid
string_to_string = "warn"                # forbid
tests_outside_test_module = "warn"       # forbid
undocumented_unsafe_blocks = "warn"      # forbid
unnecessary_self_imports = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"      # forbid
unwrap_in_result = "warn"
#unwrap_used = "warn"
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }

min_ident_chars = "allow"

[lints.rustdoc]
private_intra_doc_links = "allow"
